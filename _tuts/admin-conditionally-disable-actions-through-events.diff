diff --git a/src/AppBundle/Event/EasyAdminSubscriber.php b/src/AppBundle/Event/EasyAdminSubscriber.php
index 11e0a5f..7721a75 100644
--- a/src/AppBundle/Event/EasyAdminSubscriber.php
+++ b/src/AppBundle/Event/EasyAdminSubscriber.php
@@ -7,23 +7,36 @@ use JavierEguiluz\Bundle\EasyAdminBundle\Event\EasyAdminEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\EventDispatcher\GenericEvent;
 use Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface;
+use Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface;
+use Symfony\Component\Security\Core\Exception\AccessDeniedException;
 
 class EasyAdminSubscriber implements EventSubscriberInterface
 {
     private $tokenStorage;
+    private $authorizationChecker;
 
-    public function __construct(TokenStorageInterface $tokenStorage)
+    public function __construct(TokenStorageInterface $tokenStorage, AuthorizationCheckerInterface $authorizationChecker)
     {
         $this->tokenStorage = $tokenStorage;
+        $this->authorizationChecker = $authorizationChecker;
     }
 
     public static function getSubscribedEvents()
     {
         return [
+            EasyAdminEvents::PRE_EDIT => 'onPreEdit',
             EasyAdminEvents::PRE_UPDATE => 'onPreUpdate',
         ];
     }
 
+    public function onPreEdit(GenericEvent $event)
+    {
+        $config = $event->getSubject();
+        if ($config['class'] == User::class) {
+            $this->denyAccessUnlessSuperAdmin();
+        }
+    }
+
     public function onPreUpdate(GenericEvent $event)
     {
         $entity = $event->getSubject();
@@ -37,4 +50,11 @@ class EasyAdminSubscriber implements EventSubscriberInterface
             $entity->setLastUpdatedBy($user);
         }
     }
+
+    private function denyAccessUnlessSuperAdmin()
+    {
+        if (!$this->authorizationChecker->isGranted('ROLE_SUPERADMIN')) {
+            throw new AccessDeniedException();
+        }
+    }
 }
